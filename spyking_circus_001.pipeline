function main(params) {
	set_default_parameters(params,{
		extract_raw_t1:-1,
		extract_raw_t2:-1,
		extract_raw_channels:'',
		samplerate:30000,
		spike_thresh:6,
		detect_sign:0,
		adjacency_radius:1000,
		max_elts:10000
	});

	var raw=params.raw;
	if ((params.extract_raw_t1>=0)||(params.extract_raw_t2>=0)||(params.extract_raw_channels)) {
		raw=Process('extract_raw',{timeseries:raw},{
			t1:params.extract_raw_t1,t2:params.extract_raw_t2,channels:params.extract_raw_channels
		}).timeseries_out;
	}
	
	if (!params.geom) {
		if (file_exists(inpath+'/geom.csv')) {
			params.geom=inpath+'/geom.csv';
		}
	}
	
	// Clustering
	var firings1=Process('ml_spyking_circus',{timeseries:raw,geom:params.geom},{
			samplerate:params.samplerate,
			spike_thresh:params.spike_thresh,
			detect_sign:params.detect_sign,
			adjacency_radius:params.adjacency_radius,
			max_elts:params.max_elts
		}).firings_out;

	// Write the output
	write_prv(raw,params.outpath+'/raw.mda.prv');
	if (params.geom) {
		write_file(params.geom,params.outpath+'/geom.csv');
	}
	write_file(firings1,params.outpath+'/firings.mda');

	run_pipeline();
}

function run_pipeline() {
	_MP2.runPipeline();
}

function Process(processor_name,inputs,parameters) {
	if (!parameters) parameters={};
	var ret=_MP2.addProcess(
		processor_name,
		JSON.stringify(inputs),
		JSON.stringify(parameters),
		'' // empty outputs means that they will be created as temporary files and the return object will contain the paths to these temporary files
	);
	return JSON.parse(ret);
}

function setNumThreads(num_threads) {
	_MP2.setNumThreads(num_threads);
}

function write_file(input,output) {
	_MP2.addCopyFile(input,output);
	/*
	_MP2.addProcess(
		'copy',
		JSON.stringify({input:input}),
		JSON.stringify({}),
		JSON.stringify({output:output})
	);
	*/
}

function write_prv(input,output) {
	_MP2.addPrv(input,output);
}

function clone(obj) {
	return JSON.parse(JSON.stringify(obj));
}

var console={
	log:function(msg) {_MP2.log(msg);}
};

function set_default_parameters(params,defaults) {
	for (var pname in defaults) {
		if (!(pname in params)) {
			params[pname]=defaults[pname];
		}
	}
}
